#include <iostream>
#include <mutex>
#include <vector>
#include <random>
#include <algorithm>
using namespace std;

class Board{
    static vector<vector<int>> sudokuBoard;
    static Board* boardPtr;
    static mutex mtx;
    //Singleton Constructor
    Board(){
        for (int i = 0; i < 9; i++){
            for (int j = 0; j < 9; j++){
                sudokuBoard[i][j] = 0;
            }
        }
    }

    public:

        Board(const Board& obj) = delete;

        static Board* getInstance(){
            if(boardPtr == nullptr){
                lock_guard<mutex> lock(mtx);
                if(boardPtr == nullptr){
                    boardPtr = new Board();
                }
            }
            return boardPtr;
        }

        void setValues()
} board;